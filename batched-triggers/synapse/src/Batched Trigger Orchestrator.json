{
    "name": "Batched Trigger Orchestrator",
    "properties": {
        "activities": [
            {
                "name": "Initial pipeline queue check",
                "type": "WebActivity",
                "dependsOn": [],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "method": "POST",
                    "url": {
                        "value": "https://@{pipeline().DataFactory}.dev.azuresynapse.net//queryPipelineRuns?api-version=2020-12-01",
                        "type": "Expression"
                    },
                    "connectVia": {
                        "referenceName": "AutoResolveIntegrationRuntime",
                        "type": "IntegrationRuntimeReference"
                    },
                    "body": {
                        "value": "{\n  \"lastUpdatedAfter\": \"@{pipeline().parameters.CallingPipelineTriggerTime}\",\n  \"lastUpdatedBefore\": \"@{utcNow()}\",\n  \"filters\": [\n    {\n      \"operand\": \"PipelineName\",\n      \"operator\": \"Equals\",\n      \"values\": [\n        \"@{pipeline()?.TriggeredByPipelineName}\"\n      ]\n    },\n    {\n      \"operand\": \"Status\",\n      \"operator\": \"Equals\",\n      \"values\": [\n        \"Queued\"\n      ]\n    }\n  ]\n}\n",
                        "type": "Expression"
                    },
                    "authentication": {
                        "type": "MSI",
                        "resource": "https://dev.azuresynapse.net/"
                    }
                }
            },
            {
                "name": "If no queued runs then delay",
                "type": "IfCondition",
                "dependsOn": [
                    {
                        "activity": "Update queued run count",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "expression": {
                        "value": "@greater(length(activity('Initial pipeline queue check').output.value), 0) ",
                        "type": "Expression"
                    },
                    "ifFalseActivities": [
                        {
                            "name": "Delay",
                            "type": "Wait",
                            "dependsOn": [],
                            "userProperties": [],
                            "typeProperties": {
                                "waitTimeInSeconds": {
                                    "value": "@pipeline().parameters.DelayInSeconds",
                                    "type": "Expression"
                                }
                            }
                        },
                        {
                            "name": "Delayed pipeline queue check",
                            "type": "WebActivity",
                            "dependsOn": [
                                {
                                    "activity": "Delay",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
                                "timeout": "0.12:00:00",
                                "retry": 0,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "method": "POST",
                                "url": {
                                    "value": "https://@{pipeline().DataFactory}.dev.azuresynapse.net//queryPipelineRuns?api-version=2020-12-01",
                                    "type": "Expression"
                                },
                                "connectVia": {
                                    "referenceName": "AutoResolveIntegrationRuntime",
                                    "type": "IntegrationRuntimeReference"
                                },
                                "body": {
                                    "value": "{\n  \"lastUpdatedAfter\": \"@{pipeline().parameters.CallingPipelineTriggerTime}\",\n  \"lastUpdatedBefore\": \"@{utcNow()}\",\n  \"filters\": [\n    {\n      \"operand\": \"PipelineName\",\n      \"operator\": \"Equals\",\n      \"values\": [\n        \"@{pipeline()?.TriggeredByPipelineName}\"\n      ]\n    },\n    {\n      \"operand\": \"Status\",\n      \"operator\": \"Equals\",\n      \"values\": [\n        \"Queued\"\n      ]\n    }\n  ]\n}\n",
                                    "type": "Expression"
                                },
                                "authentication": {
                                    "type": "MSI",
                                    "resource": "https://dev.azuresynapse.net/"
                                }
                            }
                        },
                        {
                            "name": "Update queued run count again",
                            "type": "SetVariable",
                            "dependsOn": [
                                {
                                    "activity": "Delayed pipeline queue check",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "QueuedRunCount",
                                "value": {
                                    "value": "@length(activity('Delayed pipeline queue check').output.value) ",
                                    "type": "Expression"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "name": "Update queued run count",
                "type": "SetVariable",
                "dependsOn": [
                    {
                        "activity": "Initial pipeline queue check",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "variableName": "QueuedRunCount",
                    "value": {
                        "value": "@length(activity('Initial pipeline queue check').output.value) ",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "If any queued runs then cancel execution",
                "type": "IfCondition",
                "dependsOn": [
                    {
                        "activity": "If no queued runs then delay",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "expression": {
                        "value": "@greater(variables('QueuedRunCount'), 0)",
                        "type": "Expression"
                    },
                    "ifFalseActivities": [
                        {
                            "name": "Continue execution",
                            "type": "SetVariable",
                            "dependsOn": [],
                            "policy": {
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "pipelineReturnValue",
                                "value": [
                                    {
                                        "key": "ContinueExecution",
                                        "value": {
                                            "type": "Boolean",
                                            "content": true
                                        }
                                    }
                                ],
                                "setSystemVariable": true
                            }
                        }
                    ],
                    "ifTrueActivities": [
                        {
                            "name": "Cancel execution",
                            "type": "SetVariable",
                            "dependsOn": [],
                            "policy": {
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "pipelineReturnValue",
                                "value": [
                                    {
                                        "key": "ContinueExecution",
                                        "value": {
                                            "type": "Boolean",
                                            "content": false
                                        }
                                    }
                                ],
                                "setSystemVariable": true
                            }
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "DelayInSeconds": {
                "type": "int",
                "defaultValue": 1
            },
            "CallingPipelineTriggerTime": {
                "type": "string"
            }
        },
        "variables": {
            "QueuedRunCount": {
                "type": "Integer",
                "defaultValue": 0
            }
        },
        "annotations": []
    }
}